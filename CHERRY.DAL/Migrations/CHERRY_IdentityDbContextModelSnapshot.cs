// <auto-generated />
using System;
using CHERRY.DAL.ApplicationDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CHERRY.DAL.Migrations
{
    [DbContext(typeof(CHERRY_IdentityDbContext))]
    partial class CHERRY_IdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CHERRY.DAL.Entities.Brand", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Cart", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_User")
                        .IsUnique()
                        .HasFilter("[ID_User] IS NOT NULL");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.CartProductVariants", b =>
                {
                    b.Property<Guid?>("IDCart")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDOptions")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IDCart", "IDOptions");

                    b.HasIndex("IDOptions");

                    b.ToTable("CartProductVariants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Categories", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.CategoriesVariants", b =>
                {
                    b.Property<Guid>("IDVariants")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDCategories")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDVariants", "IDCategories");

                    b.HasIndex("IDCategories");

                    b.ToTable("CategoriesVariants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Colors", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HexCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.GhtkOrderRequest", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliverOption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickDistrict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickWard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GhtkOrderRequest");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Material", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.MediaAssets", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IDReview")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDVariant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDReview");

                    b.HasIndex("IDVariant");

                    b.ToTable("MediaAssets");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.MemberRank", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MemberRank");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Options", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IDColor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDSizes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDVariant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDColor");

                    b.HasIndex("IDSizes");

                    b.HasIndex("IDVariant");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Cotsts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HexCode")
                        .HasColumnType("int");

                    b.Property<string>("IDUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShippingMethod")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TrackingCheck")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDUser");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.OrderVariant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("HasPurchased")
                        .HasColumnType("bit");

                    b.Property<bool>("HasReviewed")
                        .HasColumnType("bit");

                    b.Property<Guid>("IDOptions")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("IDOptions");

                    b.HasIndex("IDOrder");

                    b.ToTable("OrderVariant");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.PromotionVariant", b =>
                {
                    b.Property<Guid>("IDPromotion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDVariant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDPromotion", "IDVariant");

                    b.HasIndex("IDVariant");

                    b.ToTable("PromotionVariant");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Review", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IDOrderVariant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IDUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("IDVariant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPurchased")
                        .HasColumnType("bit");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDOrderVariant");

                    b.HasIndex("IDUser");

                    b.HasIndex("IDVariant");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Sizes", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HexCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Variants", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDBrand")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDMaterial")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU_v2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDBrand");

                    b.HasIndex("IDMaterial");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Voucher", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimumAmount")
                        .HasColumnType("int");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("ReducedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.VoucherHistory", b =>
                {
                    b.Property<Guid>("IDOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MoneyAfterReducition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyBeforReducition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyReducition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDOrder", "IDVoucher");

                    b.HasIndex("IDOrder")
                        .IsUnique();

                    b.HasIndex("IDVoucher");

                    b.ToTable("VoucherHistory");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.VoucherUser", b =>
                {
                    b.Property<string>("IDUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("IDVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifieBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifieDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IDUser", "IDVoucher");

                    b.HasIndex("IDVoucher");

                    b.ToTable("VoucherUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "bbd1a3ac-b468-4163-9d25-e55b30f4262d",
                            ConcurrencyStamp = "233f8f39-0777-4f57-80f9-f67e0655b3ce",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "31d5f02b-51af-431f-a8de-54c329d10ee5",
                            ConcurrencyStamp = "93dd5d51-6def-4b32-a767-6e8a2a6cfe99",
                            Name = "Client",
                            NormalizedName = "Client"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<Guid?>("ID_MemberRank")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MemberRankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("MemberRankID");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Cart", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("CHERRY.DAL.Entities.Cart", "ID_User")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.CartProductVariants", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Cart", "Cart")
                        .WithMany("CartProductVariants")
                        .HasForeignKey("IDCart")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Options", "Options")
                        .WithMany("CartProductVariants")
                        .HasForeignKey("IDOptions")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.CategoriesVariants", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Categories", "Categories")
                        .WithMany("CategoriesVariants")
                        .HasForeignKey("IDCategories")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Variants", "Variants")
                        .WithMany("CategoriesVariants")
                        .HasForeignKey("IDVariants")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.MediaAssets", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Review", "Review")
                        .WithMany("MediaAssets")
                        .HasForeignKey("IDReview")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CHERRY.DAL.Entities.Variants", "Variants")
                        .WithMany("MediaAssets")
                        .HasForeignKey("IDVariant")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Review");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Options", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Colors", "Color")
                        .WithMany("Options")
                        .HasForeignKey("IDColor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CHERRY.DAL.Entities.Sizes", "Sizes")
                        .WithMany("Options")
                        .HasForeignKey("IDSizes")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CHERRY.DAL.Entities.Variants", "Variants")
                        .WithMany("Options")
                        .HasForeignKey("IDVariant")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Color");

                    b.Navigation("Sizes");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Order", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.OrderVariant", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Options", "Options")
                        .WithMany("OrderVariant")
                        .HasForeignKey("IDOptions")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Order", "Order")
                        .WithMany("OrderVariant")
                        .HasForeignKey("IDOrder")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Options");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.PromotionVariant", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Promotion", "Promotion")
                        .WithMany("PromotionVariants")
                        .HasForeignKey("IDPromotion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Variants", "Variants")
                        .WithMany("PromotionVariants")
                        .HasForeignKey("IDVariant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Review", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.OrderVariant", "OrderVariant")
                        .WithMany("Review")
                        .HasForeignKey("IDOrderVariant")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CHERRY.DAL.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Variants", "Variants")
                        .WithMany("Reviews")
                        .HasForeignKey("IDVariant")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("OrderVariant");

                    b.Navigation("User");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Variants", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Brand", "Brand")
                        .WithMany("Variants")
                        .HasForeignKey("IDBrand")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Material", "Material")
                        .WithMany("Variants")
                        .HasForeignKey("IDMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.VoucherHistory", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.Order", "Order")
                        .WithOne("VoucherHistory")
                        .HasForeignKey("CHERRY.DAL.Entities.VoucherHistory", "IDOrder")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Voucher", "Voucher")
                        .WithMany("VoucherHistory")
                        .HasForeignKey("IDVoucher")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.VoucherUser", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.User", "Users")
                        .WithMany("VoucherUser")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHERRY.DAL.Entities.Voucher", "Voucher")
                        .WithMany("VoucherUser")
                        .HasForeignKey("IDVoucher")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.User", b =>
                {
                    b.HasOne("CHERRY.DAL.Entities.MemberRank", null)
                        .WithMany("Users")
                        .HasForeignKey("MemberRankID");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Brand", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Cart", b =>
                {
                    b.Navigation("CartProductVariants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Categories", b =>
                {
                    b.Navigation("CategoriesVariants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Colors", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Material", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.MemberRank", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Options", b =>
                {
                    b.Navigation("CartProductVariants");

                    b.Navigation("OrderVariant");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Order", b =>
                {
                    b.Navigation("OrderVariant");

                    b.Navigation("VoucherHistory")
                        .IsRequired();
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.OrderVariant", b =>
                {
                    b.Navigation("Review");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionVariants");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Review", b =>
                {
                    b.Navigation("MediaAssets");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Sizes", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Variants", b =>
                {
                    b.Navigation("CategoriesVariants");

                    b.Navigation("MediaAssets");

                    b.Navigation("Options");

                    b.Navigation("PromotionVariants");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.Voucher", b =>
                {
                    b.Navigation("VoucherHistory");

                    b.Navigation("VoucherUser");
                });

            modelBuilder.Entity("CHERRY.DAL.Entities.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("VoucherUser");
                });
#pragma warning restore 612, 618
        }
    }
}
