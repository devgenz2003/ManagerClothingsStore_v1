@using CHERRY.UI.Areas.Admin.Models
@using CHERRY.Utilities

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model MonthlyStatistic
<style>
    /* Style cho phần tổng thể của danh sách sản phẩm bán chạy nhất */
    .best-selling-products {
        font-family: Arial, sans-serif;
        border: 1px solid #ccc;
        padding: 20px;
        margin-bottom: 20px;
    }

    /* Style cho tiêu đề của danh sách */
    .product-title {
        font-size: 24px;
        margin-bottom: 10px;
    }

    /* Style cho danh sách các sản phẩm */
    .product-list {
        list-style: none;
        padding: 0;
    }

    /* Style cho từng sản phẩm trong danh sách */
    .product-item {
        font-size: 16px;
        margin-bottom: 5px;
    }

    /* Định dạng Form */
    form {
        margin: 20px 0;
        padding: 10px;
        border: 2px solid #007bff;
        border-radius: 8px;
        background-color: #f2f2f2;
    }

        form label {
            margin-right: 15px;
            font-size: 16px;
        }

        form input[type="month"] {
            padding: 8px;
            border: 2px solid #ddd;
            border-radius: 4px;
        }

        form button {
            background-color: #007bff;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

            form button:hover {
                background-color: #0056b3;
            }

    /* Định dạng Phần Thống Kê và Biểu Đồ */
    .statistics-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
        flex-wrap: wrap; /* Cho phép bọc nếu không đủ chỗ */
    }

    .statistics, .chart-container {
        flex: 1;
        margin: 5px; /* Khoảng cách nhỏ giữa các phần */
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        background-color: white;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        min-width: 300px; /* Đảm bảo kích thước tối thiểu */
    }

        .statistics h2 {
            color: #333;
            margin-bottom: 15px;
        }

        .statistics p {
            font-size: 16px;
            color: #555;
        }

            .statistics p small {
                font-size: 12px;
            }

    .export-button {
        display: inline-block;
        background-color: #28a745; /* Màu xanh lá */
        color: white;
        padding: 10px 15px;
        margin-top: 20px;
        border-radius: 5px;
        text-decoration: none; /* Xóa gạch chân */
        font-weight: bold;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        transition: background-color 0.3s, box-shadow 0.3s;
    }

        .export-button:hover {
            background-color: #218838; /* Màu xanh đậm hơn */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

    /* Biểu Đồ */
    .chart-container {
        max-width: 450px; /* Giới hạn kích thước tối đa của biểu đồ */
        height: auto; /* Độ cao tự động điều chỉnh */
    }

    .bank-payment-details {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 15px;
        background-color: #f9f9f9;
        margin-top: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .bank-payment-details h3 {
            font-size: 1.5em;
            color: #333;
            margin-bottom: 10px;
        }

        .bank-payment-details h4 {
            font-size: 1.2em;
            color: #555;
            margin-bottom: 8px;
        }

        .bank-payment-details ul {
            list-style-type: none;
            padding-left: 0;
            margin-top: 0;
        }

        .bank-payment-details li {
            margin-bottom: 5px;
            font-size: 1em;
            color: #777;
        }

        .bank-payment-details a {
            text-decoration: none;
            color: #007bff;
        }

            .bank-payment-details a:hover {
                text-decoration: underline;
            }
</style>

<h1>Trang chủ</h1>
<form asp-action="Index" method="get">
    <label for="month">Chọn Tháng:</label>
    <input type="month" id="month" name="month" value="@DateTime.Now.ToString("yyyy-MM")">
    <button type="submit">Thống kê</button>
</form>
<div class="statistics-container">
    <div class="statistics">
        <h2>Doanh Thu Tháng @Model.Month.ToString("MM/yyyy")</h2>
        <p>Doanh thu: @Currency.FormatCurrency(Model.TotalRevenue.ToString()) <small>đ</small></p>
        <p>Chi phí: @Currency.FormatCurrency(Model.TotalCost.ToString()) <small>đ</small></p>
        <p>Lợi nhuận: @Currency.FormatCurrency(Model.TotalProfit.ToString()) <small>đ</small></p>
        <p>Tổng đơn hàng: @Model.TotalOrder</p>
        <p>Đơn hàng chưa xử lý: @Model.TotalOrdersnosuccess</p>
        <p>Đơn hàng đã xử lý: @Model.TotalOrderssuccess</p>
        <p>Tổng sản phẩm: @ViewBag.TotalProduct</p>
        <p>Tổng số lượng phân loại: @ViewBag.TotalQuantityOptions</p>
    </div>
    <div class="chart-container">
        <canvas id="revenueChart"></canvas>
    </div>
    <div class="chart-container">
        <canvas id="orderChart"></canvas>
    </div>
</div>
<div class="bank-payment-details">
    <h3>Tổng đơn thanh toán ngân hàng: @Currency.FormatCurrency(ViewBag.TotalBankPayments.ToString()) đ</h3>

    <h4>Các đơn hàng thanh toán tại NCB</h4>
    <ul>
        @foreach (var order in ViewBag.BankPaymentOrders)
        {
            <li>
                <a id="HexCode" href="@Url.Action("Details_Order", "ManagerOrder",new { IDOrder = order.ID })">
                    @order.HexCode
                </a>
                - Tổng giá trị: @Currency.FormatCurrency(order.TotalAmount.ToString()) đ
            </li>
        }
    </ul>
</div>
@if (Model != null && Model.BestSellingProducts != null)
{
    <div class="best-selling-products">
        <h2 class="product-title">Top sản phẩm bán chạy</h2>
        <ul class="product-list">
            @foreach (var product in Model.BestSellingProducts)
            {
                <li class="product-item">Product ID:
                    <a href="@Url.Action("Details","ManagerOptions", new { ID = product.Key })">
                        @product.Key
                    </a>
                    - Quantity Sold: @product.Value</li>
            }
        </ul>
    </div>
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    var ctxRevenue = document.getElementById('revenueChart').getContext('2d');
    var revenueChart = new Chart(ctxRevenue, {
        type: 'bar',
        data: {
            labels: ['Chi phí', 'Lợi nhuận'],
            datasets: [{
                label: 'Tổng số (đ)',
                data: [@Model.TotalCost, @Model.TotalProfit],
                backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(75, 192, 192, 0.2)'],
                borderColor: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)'],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    var ctxOrder = document.getElementById('orderChart').getContext('2d');
    var orderStatisticsChart = new Chart(ctxOrder, {
        type: 'pie',
        data: {
            labels: ['Hoàn thành', 'Chưa hoàn thành'],
            datasets: [{
                label: 'Trạng thái đơn hàng',
                data: [@Model.TotalOrderssuccess, @Model.TotalOrdersnosuccess],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });
</script>
<a asp-action="ExportToExcel" class="export-button" asp-route-month="@DateTime.Now.ToString("yyyy-MM")">Export Orders to Excel</a>
