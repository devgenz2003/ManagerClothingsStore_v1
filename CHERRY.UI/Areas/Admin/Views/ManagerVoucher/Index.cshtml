@using CHERRY.Utilities
@using static CHERRY.DAL.Entities.Voucher
@model IEnumerable<CHERRY.BUS.ViewModels.Voucher.VoucherVM>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}

<style>
    .small-text {
        font-size: smaller; /* Hoặc sử dụng giá trị cụ thể như 0.75em */
        display: block; /* Để hiển thị trên một dòng mới */
    }

    .amount-display {
        font-size: 1.2em; /* Tăng kích thước font */
        font-weight: bold; /* Làm đậm chữ */
        color: #333; /* Màu sắc cho số tiền */
    }

    .amount-text {
        color: #6c757d; /* Màu sắc cho văn bản chuyển đổi */
        font-size: 0.8em; /* Giảm kích thước font */
        margin-top: 4px; /* Khoảng cách từ số tiền */
    }

        .amount-text small {
            display: block; /* Đảm bảo hiển thị trên một dòng mới */
        }

    .table {
        width: 100%;
        margin-top: 20px;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 10px;
            border: 1px solid #ddd;
        }

        .table th {
            background-color: #f2f2f2;
            color: #333;
        }

    .status-active {
        color: green;
    }

    .status-waiting {
        color: orange;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-menu {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-menu a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown:hover .dropdown-menu {
        display: block;
    }

    .dropdown-menu a:hover {
        background-color: #ddd;
    }

    .btn-primary.dropdown-toggle {
        background-color: #6c7ae0;
        border: none;
        border-radius: 20px;
        padding: 10px 20px;
        color: white;
    }

    /* Điều chỉnh theo style của bạn */

</style>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table" style="text-align:center">
    <thead>
        <tr>
            <th>Mã</th>
            <th>Tên</th>
            <th>Bắt Đầu</th>
            <th>Kết Thúc</th>
            <th>Loại</th>
            <th>Tiền Tối Thiểu</th>
            <th>Trạng thái</th>
            <th>Hành Động</th>
        </tr>
    </thead>
    <tbody style="text-align:center">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @if(item.Type == Types.Percent)
                    {
                        <p>%</p>
                    }
                    else
                    {
                        <p>vnđ</p>
                    }
                </td>
                <td>
                    <div class="amount-display">
                        @Currency.FormatCurrency(item.MinimumAmount.ToString()) đ
                    </div>
                    <div class="amount-text">
@*                         <small>(@Currency.NumberToText(item.MinimumAmount, true))</small>
 *@                    </div>
                </td>
                <td>
                    @switch (item.Status)
                    {
                        case 1:
                            <span class="status-active">Hoạt động</span>
                            break;
                        case 2:
                            <span class="status-waiting">Chờ</span>
                            break;
                        default:
                            @Html.DisplayFor(modelItem => item.Status)
                            break;
                    }
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Select
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" href="@Url.Action("Details","ManagerVoucher", new { ID = item.ID })">Chi tiết</a>
                            <a class="dropdown-item" href="@Url.Action("Edit", new { ID = item.ID })">Chỉnh sửa</a>
                            <a class="dropdown-item" href="@Url.Action("Delete", new { ID = item.ID })">Xóa</a>
                        </div>
                    </div>
                </td>

            </tr>
        }
    </tbody>
</table>
