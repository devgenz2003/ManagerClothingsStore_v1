@using CHERRY.Utilities
@model CompositeViewModel_Client
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    HashSet<string> uniqueColors = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
    HashSet<string> uniqueSizes = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
}
<style>
    #description .product-tab dl {
        margin: 0;
        padding: 0;
    }

    #description .product-tab dt,
    #description .product-tab dd {
        padding: 5px 0;
    }

    #description .product-tab dt {
        font-weight: bold;
    }

    #description .product-tab dd {
        margin-left: 0;
        font-weight: normal;
    }

    select {
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-top: 5px;
        margin-bottom: 15px;
        width: 100%;
        box-sizing: border-box; /* Thêm vào để không thay đổi kích thước khi thêm padding */
    }

    label {
        display: block; /* Để label hiển thị trên một dòng riêng */
        margin-top: 20px; /* Khoảng cách giữa các thành phần */
        font-weight: bold; /* Làm đậm chữ cho nhãn */
        cursor: pointer; /* Con trỏ chuột sẽ thay đổi khi di qua label */
    }

    .description-container {
        margin-top: 20px;
        font-family: 'Arial', sans-serif;
        color: #333;
        font-size: 14px;
        line-height: 1.6;
        background-color: #f8f8f8;
        padding: 15px;
        border-radius: 5px;
        border: 1px solid #ddd;
        overflow: auto; /* Thêm vào nếu nội dung mô tả quá dài */
    }

    .owl-carousel .item {
        text-align: center; /* Căn giữa ảnh trong mỗi .item */
    }

        .owl-carousel .item img {
            width: 70%; /* Thu nhỏ ảnh đi 20% */
            margin: 0 auto; /* Để ảnh ra giữa */
        }
</style>
<body class="cnt-home">
    <div class="body-content outer-top-xs">
        <div class='container'>
            <div class='row single-product'>
                <div class='col-md-12'>
                    <div class="detail-block">
                        <div class="row  wow fadeInUp">
                            <div class="col-xs-12 col-sm-6 col-md-5 gallery-holder">
                                <div class="product-item-holder size-big single-product-gallery small-gallery">
                                    <div id="owl-single-product" class="owl-carousel owl-theme">
                                        @if (Model.VariantsVM.ImagePaths.Any())
                                        {
                                            @foreach (var imagePath in Model.VariantsVM.ImagePaths.Select((value, index) => new { Value = value, Index = index }))
                                            {
                                                <div class="item">
                                                    <a data-lightbox="image-@imagePath.Index" data-title="Gallery" href="@imagePath.Value">
                                                        <img class="img-responsive" alt="" src="@imagePath.Value" />
                                                    </a>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <div class="single-product-gallery-thumbs gallery-thumbs">

                                        <div id="owl-single-product-thumbnails">
                                            @if (Model.VariantsVM.ImagePaths.Any())
                                            {
                                                @foreach (var imagePath in Model.VariantsVM.ImagePaths.Select((value, index) => new { Value = value, Index = index }))
                                                {
                                                    <div class="item">
                                                        <a class="horizontal-thumb" data-target="#owl-single-product" data-slide="@imagePath.Index" href="#slide@imagePath.Index">
                                                            <img class="img-responsive" width="85" alt="" src="assets/images/blank.gif" data-echo="@imagePath.Value">
                                                        </a>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div><!-- /.gallery-thumbs -->
                                </div><!-- /.single-product-gallery -->
                            </div>
                            <div class='col-sm-6 col-md-7 product-info-block'>
                                <div class="product-info">
                                    <h1 class="name">@Model.VariantsVM.VariantName</h1>
                                    <div class="rating-reviews m-t-20">
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <div class="rating rateit-small"></div>
                                            </div>
                                            <div class="col-sm-8">
                                                <div class="reviews">
                                                    <a href="#" class="lnk">(13 Reviews)</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="description-container m-t-20">
                                        @Model.VariantsVM.Description
                                    </div>
                                    <hr />
                                    <div class="row" style="margin: 0; padding: 0;">
                                        <div class="price" id="displayPrice" style="font-family: 'Arial', sans-serif; color: #333; font-size: 16px; font-weight: normal; line-height: 1.5; text-align: left;">
                                            @if (Model.VariantsVM.Minprice == Model.VariantsVM.Maxprice)
                                            {
                                                <dt style="display: inline;">Giá bán:</dt>
                                                <dd style="display: inline; font-weight: bold; margin-left: 5px;">@Currency.FormatCurrency(Model.VariantsVM.Maxprice.ToString())<span> ₫</span></dd>
                                            }
                                            else
                                            {
                                                <dt style="display: inline;">Giá bán:</dt>
                                                <dd style="display: inline; font-weight: bold; margin-left: 5px;">@Currency.FormatCurrency(Model.VariantsVM.Minprice.ToString())<span> ₫</span></dd>
                                                <dd style="display: inline; margin-left: 5px; margin-right: 5px;">-</dd>
                                                <dd style="display: inline; font-weight: bold;">@Currency.FormatCurrency(Model.VariantsVM.Maxprice.ToString())<span> ₫</span></dd>
                                            }
                                        </div>
                                    </div>

                                    <!-- Hiển thị thẻ select cho màu -->
                                    <label for="colorSelect">Màu:</label>
                                    <select id="colorSelect">
                                        <option value="">Chọn màu</option>
                                        @foreach (var option in Model.LstOptionsVM)
                                        {
                                            if (uniqueColors.Add(option.ColorName))
                                            {
                                                <option value="@option.ColorName">@option.ColorName</option>
                                            }
                                        }
                                    </select>

                                    <!-- Hiển thị thẻ select cho size -->
                                    <label for="sizeSelect">Size:</label>
                                    <select id="sizeSelect">
                                        <option value="">Chọn size</option>
                                        @foreach (var option in Model.LstOptionsVM)
                                        {
                                            if (uniqueSizes.Add(option.SizeName))
                                            {
                                                <option value="@option.SizeName">@option.SizeName</option>
                                            }
                                        }
                                    </select>
                                    <h5>Số lượng</h5>
                                    <div class="quantity-selector">
                                        <button id="decreaseQuantity">-</button>
                                        <input type="number" id="quantity" value="1" min="1" max="100" step="1">
                                        <button id="increaseQuantity">+</button>
                                        <!-- Số lượng tồn kho -->
                                        <div id="inventoryQuantityDiv" style="margin-left: 20px; margin-top: 10px; color: #888;">
                                            Sản phẩm có sẵn: <span id="inventoryQuantity">@Model.VariantsVM.TotalQuantity</span>
                                        </div>
                                    </div>
                                    <hr />
                                    <div class="card-footer">
                                        <div class="row">
                                            <div class="col-md-6" style="text-align: center">
                                                <form method="post" action="/CartProductVariants/AddToCart" id="add-to-cart-form">
                                                    <input type="hidden" name="IDOptions" id="IDOptionsInput" value="Giá trị mặc định hoặc để trống" />
                                                    <input type="number" hidden name="Quantity" id="quantityInput" value="1" min="1" />
                                                    <button class="btn btn-primary cart-btn" type="button" id="add-to-cart-button">Thêm vào giỏ hàng</button>
                                                </form>
                                            </div>

                                            <div class="col-md-6" style="text-align: center">
                                                <form method="post" action="">
                                                    <!-- Input ẩn cho IDOptions -->
                                                    <input type="hidden" name="IDOptions" id="IDOptionsInput" value="" />
                                                    <button id="buyNowButton" class="btn btn-danger cart-btn" type="submit">Mua ngay</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div><!-- /.product-info -->
                            </div><!-- /.col-sm-7 -->
                        </div><!-- /.row -->
                    </div>

                    <div class="product-tabs inner-bottom-xs  wow fadeInUp">
                        <div class="row">
                            <div class="col-sm-3">
                                <ul id="product-tabs" class="nav nav-tabs nav-tab-cell">
                                    <li class="active"><a data-toggle="tab" href="#description">Thông tin</a></li>
                                    <li><a data-toggle="tab" href="#review">Đánh giá</a></li>
                                </ul>
                            </div>
                            <div class="col-sm-9">

                                <div class="tab-content">

                                    <div id="description" class="tab-pane in active">
                                        <div class="product-tab">
                                            <dl class="row">
                                                <dt class="col-sm-4">Thương hiệu:</dt>
                                                <dd class="col-sm-8">@Model.VariantsVM.IDBrand</dd>

                                                <dt class="col-sm-4">Xuất xứ:</dt>
                                                <dd class="col-sm-8">@Model.VariantsVM.Origin</dd>

                                                <dt class="col-sm-4">Chất liệu:</dt>
                                                <dd class="col-sm-8">@Model.VariantsVM.IDMaterial</dd>

                                                <dt class="col-sm-4">Phong cách:</dt>
                                                <dd class="col-sm-8">@Model.VariantsVM.Style</dd>
                                            </dl>
                                        </div>
                                    </div>

                                    <div id="review" class="tab-pane">
                                        <div class="product-tab">
                                            <div class="review-form">
                                                <div class="form-container">
                                                    <p>Phần này để hiện feedback</p>
                                                </div><!-- /.form-container -->
                                            </div><!-- /.review-form -->
                                        </div><!-- /.product-add-review -->
                                    </div><!-- /.product-tab -->
                                </div><!-- /.tab-pane -->
                            </div><!-- /.tab-content -->
                        </div><!-- /.col -->
                    </div><!-- /.row -->
                </div><!-- /.product-tabs -->
            </div><!-- /.col -->
            <div class="clearfix"></div>
        </div><!-- /.row -->
    </div><!-- /.container -->
    </div><!-- /.body-content -->
</body>
<script src="/js/details.js"></script>
<script>
    var idOptions = "";

    document.addEventListener("DOMContentLoaded", function () {
        const decreaseButton = document.getElementById("decreaseQuantity");
        const increaseButton = document.getElementById("increaseQuantity");
        const quantityInput = document.getElementById("quantity");
        const inventoryQuantity = parseInt(document.getElementById("inventoryQuantity").innerText);
        decreaseButton.addEventListener("click", function () {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });
        increaseButton.addEventListener("click", function () {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue < inventoryQuantity) {
                quantityInput.value = currentValue + 1;
            }
        });
        quantityInput.addEventListener("change", function () {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue < 1) {
                quantityInput.value = 1;
            } else if (currentValue > inventoryQuantity) {
                quantityInput.value = inventoryQuantity;
            }
        });
    });

    document.getElementById('colorSelect').addEventListener('change', updateOptions);
    document.getElementById('sizeSelect').addEventListener('change', updateOptions);
    const IDOptionsInput = document.getElementById('IDOptionsInput');

    async function updateOptions() {
        const selectedColor = document.getElementById('colorSelect').value;
        const selectedSize = document.getElementById('sizeSelect').value;

        if (selectedColor && selectedSize) {
            const response = await fetch(`https://localhost:7108/api/Options/FindIDOptions?IDVariant=@Model.VariantsVM.ID&size=${selectedSize}&color=${selectedColor}`);

            if (response.ok) {
                const data = await response.json();
                document.getElementById('IDOptionsInput').value = data.id;
                idOptions = data.id;
                console.log('data:', data);

                function formatCurrency(price) {
                    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price);
                }

                const displayPrice = document.getElementById('displayPrice');
                if (data.retailPrice != null && data.retailPrice !== undefined) {
                    const formattedPrice = formatCurrency(data.retailPrice);
                    displayPrice.innerText = formattedPrice;
                } else {
                    displayPrice.innerText = 'Giá bán không khả dụng';
                }

                const inventoryQuantity = document.getElementById('inventoryQuantity');
                if (data.stockQuantity != null && data.stockQuantity !== undefined) {
                    inventoryQuantity.innerText = data.stockQuantity;
                } else {
                    inventoryQuantity.innerText = 'Số lượng không khả dụng';
                }
            }
        } else {
            document.getElementById('IDOptionsInput').value = "";
        }
    }
    document.addEventListener("DOMContentLoaded", function () {
        var idOptionsValue = "Giá trị cần thiết";

        const addToCartButton = document.getElementById("addToCart");
        addToCartButton.addEventListener("click", function (e) {
            e.preventDefault();

            const idOptionsInput = document.getElementById('IDOptionsInput');
            idOptionsInput.value = idOptionsValue; 
            const quantityInput = document.getElementById("quantity");
            if (quantityInput) {
                const quantity = quantityInput.value;
                const form = addToCartButton.closest('form');
                if (form) {
                    form.submit();
                }
            } else {
                console.error("Element with ID 'quantity' not found.");
            }
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        var buyNowButton = document.getElementById("buyNowButton");
        buyNowButton.addEventListener("click", async function (e) {
            e.preventDefault();

            var quantity = parseInt(document.getElementById("quantity").value, 10);
            var idOptions = document.getElementById("IDOptionsInput").value;
            var selectedProducts = [];

            try {
                const response = await fetch(`https://localhost:7108/api/Options/GetByID/${idOptions}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                const productDetails = await response.json();

                var totalPrice = productDetails.retailPrice * quantity;

                selectedProducts.push({
                    IDOptions: idOptions,
                    ProductName: productDetails.name,
                    ColorName: productDetails.colorName,
                    SizeName: productDetails.sizeName,
                    Quantity: quantity,
                    TotalPrice: totalPrice,
                    UnitPrice: productDetails.retailPrice,
                    ImageURL: productDetails.imageURL
                });

                console.log(selectedProducts);
                fetch('/checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ cartItems: selectedProducts })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        Swal.fire({
                            title: 'Thành công!',
                            text: 'Sản phẩm đã được thêm vào đơn đặt hàng.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                sessionStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));
                                window.location.href = "/checkout";
                            }
                        });
                    })
                    .catch(error => {
                        console.error('There has been a problem with your fetch operation:', error);
                        Swal.fire({
                            title: 'Lỗi!',
                            text: 'Không thể thêm sản phẩm vào đơn đặt hàng.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });

            } catch (error) {
                console.error('Fetch error:', error);
            }
        });
    });
</script>
<script>
    document.getElementById('add-to-cart-button').addEventListener('click', function (e) {
        e.preventDefault();
        Swal.fire({
            title: 'Bạn có chắc không?',
            text: "Bạn muốn thêm sản phẩm này vào giỏ hàng?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Có, thêm vào!',
            cancelButtonText: 'Không, đợi chút!'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('add-to-cart-form').submit();
            }
        });
    });

</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>